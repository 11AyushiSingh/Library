{"ast":null,"code":"// //import i8 from \"../image/i8.PNG\";\n// import { useState ,useEffect} from \"react\";\n// import \"./Book.css\";\n// import { Button, Dialog, DialogTitle, DialogContent, Stack, DialogActions,TextField } from '@mui/material';\n// function Book({id,Name, Author, Publisher,Image, Availability,Ledger,deleteBook,editBook}) {\n//   const initialState = {\n//     id:\"\",\n//     Image: \"\",\n//     Name:\"\",\n//     Author:\"\",\n//     Publisher:\"\",\n//     Availability:\"\",\n//     Ledger:\"\",\n//    };\n//   const [open, setOpen] = useState(false);\n//   const[video, setVideo] = useState(initialState)\n//   const [editableBook, setEditableBook] = useState(null)\n//   const[videos, setVideos] = useState([]);\n\n//   const handleClickOpen = () => {\n//     setOpen(true);\n//     editBook(id);\n//   };\n\n//   const handleClose = () => {\n//     setOpen(false);\n//   };\n\n//   function editBook(id){\n//     setEditableBook( videos.find(video=>video.id === id))\n\n//      console.log(id)\n//   }\n\n//   function updateBook(updatedBook) {\n//     const index = videos.findIndex(v => v.id === updatedBook.id);\n//     const newBooks = [...videos]; \n\n//     newBooks.splice(index, 1, updatedBook);\n\n//     fetch(`http://localhost:8000/book/${updatedBook.id}`, {\n//       method: 'PUT',\n//       headers: {\n//         'Content-Type': 'application/json'\n//       },\n//       body: JSON.stringify(updatedBook) \n//     })\n//     .then(result => {\n//       if (result.ok) {\n//         return result.json();\n//       }\n//       throw new Error('Network response was not ok.');\n//     })\n//     .then(response => {\n//       console.log(response);\n//       setVideos(newBooks); \n//     })\n//     .catch(error => {\n//       console.error('There was a problem updating the book:', error);\n\n//     });\n//   }\n\n//   function handleSubmit(e){\n//     e.preventDefault()\n//     if(editableBook){\n//       updateBook(video)\n//     }\n//     setVideo(initialState)\n//   }\n//   function handleChange(e){\n\n//     setVideo({...video,[e.target.name]:e.target.value})\n//   }\n\n//   useEffect(()=>{\n//       if(editableBook){\n//           setVideo(editableBook)\n//       }\n\n//   },[editableBook])\n\n//   return (\n//     <>\n//     <div className=\"grid-container\">\n//       <div className=\"box\">\n//         <div className=\"Pic\">\n//            {/* <img src={i8} alt=\"A book\" /> */}\n//           <img src = {Image} alt=\"A book\"/>\n//         </div>\n//         <div className=\"book\">{Name}</div>\n//         <div className=\"Author\">Author:{Author}</div>\n//         <div className=\"Publisher\">Publication:{Publisher}</div>\n//         <div className=\"Availability\"> Avability:{Availability}</div>\n//         <div className=\"Ledger\">Ledger:{Ledger}</div>\n//         <button\n//           className=\"delete\"onClick={()=>deleteBook(id)}>\n//           Delete\n//         </button>\n//         {/* <button className=\"update\" onClick = {()=>editBook(id)}>\n//           Update\n//         </button> */}\n//            <button color=\"primary\" variant=\"contained\" onClick={handleClickOpen}  >Update</button>\n//           <Dialog open={open} onClose={handleClose} fullWidth>\n//             <DialogTitle>UserScreen</DialogTitle>\n//              <DialogContent>\n\n//                 <Stack spacing={2} margin={2}>\n//                 <TextField variant=\"outlined\" label = \" Update Book Name\" name=\"Name\"  onChange={handleChange} value={video.Name}></TextField>\n//                  <TextField variant=\"outlined\" label = \" Update Author Name\" name=\"Author\"  onChange={handleChange}value={video.Author}></TextField>\n//                  <TextField variant=\"outlined\" label = \" Update Publisher Name\" name=\"Publisher\" onChange={handleChange}value={video.Publisher}></TextField>\n//                   <TextField variant=\"outlined\" label = \" Update Availability\" name=\"Availability\" onChange={handleChange}value={video.Availability}></TextField>\n//                   <TextField variant=\"outlined\" label = \" Update Ledger\" name=\"Ledger\" onChange={handleChange}value={video.Ledger}></TextField>\n\n//                  <Button color=\"primary\" variant=\"contained\" onClick={handleSubmit}>Update</Button>\n//                  </Stack>\n//              </DialogContent>\n//            <DialogActions>\n\n//                 <Button color=\"error\" variant=\"contained\" onClick={handleClose}>Close</Button>\n//             </DialogActions>\n//            </Dialog>\n\n//       </div>\n//       </div>\n//     </>\n//   );\n// }\n// export default Book;","map":{"version":3,"names":[],"sources":["C:/Users/Ayushi/library1/src/Pages/Book.js"],"sourcesContent":["// //import i8 from \"../image/i8.PNG\";\r\n// import { useState ,useEffect} from \"react\";\r\n// import \"./Book.css\";\r\n// import { Button, Dialog, DialogTitle, DialogContent, Stack, DialogActions,TextField } from '@mui/material';\r\n// function Book({id,Name, Author, Publisher,Image, Availability,Ledger,deleteBook,editBook}) {\r\n//   const initialState = {\r\n//     id:\"\",\r\n//     Image: \"\",\r\n//     Name:\"\",\r\n//     Author:\"\",\r\n//     Publisher:\"\",\r\n//     Availability:\"\",\r\n//     Ledger:\"\",\r\n//    };\r\n//   const [open, setOpen] = useState(false);\r\n//   const[video, setVideo] = useState(initialState)\r\n//   const [editableBook, setEditableBook] = useState(null)\r\n//   const[videos, setVideos] = useState([]);\r\n\r\n//   const handleClickOpen = () => {\r\n//     setOpen(true);\r\n//     editBook(id);\r\n//   };\r\n\r\n//   const handleClose = () => {\r\n//     setOpen(false);\r\n//   };\r\n  \r\n  \r\n//   function editBook(id){\r\n//     setEditableBook( videos.find(video=>video.id === id))\r\n   \r\n//      console.log(id)\r\n//   }\r\n\r\n  \r\n//   function updateBook(updatedBook) {\r\n//     const index = videos.findIndex(v => v.id === updatedBook.id);\r\n//     const newBooks = [...videos]; \r\n  \r\n  \r\n//     newBooks.splice(index, 1, updatedBook);\r\n  \r\n  \r\n//     fetch(`http://localhost:8000/book/${updatedBook.id}`, {\r\n//       method: 'PUT',\r\n//       headers: {\r\n//         'Content-Type': 'application/json'\r\n//       },\r\n//       body: JSON.stringify(updatedBook) \r\n//     })\r\n//     .then(result => {\r\n//       if (result.ok) {\r\n//         return result.json();\r\n//       }\r\n//       throw new Error('Network response was not ok.');\r\n//     })\r\n//     .then(response => {\r\n//       console.log(response);\r\n//       setVideos(newBooks); \r\n//     })\r\n//     .catch(error => {\r\n//       console.error('There was a problem updating the book:', error);\r\n      \r\n//     });\r\n//   }\r\n\r\n//   function handleSubmit(e){\r\n//     e.preventDefault()\r\n//     if(editableBook){\r\n//       updateBook(video)\r\n//     }\r\n//     setVideo(initialState)\r\n//   }\r\n//   function handleChange(e){\r\n    \r\n//     setVideo({...video,[e.target.name]:e.target.value})\r\n//   }\r\n\r\n//   useEffect(()=>{\r\n//       if(editableBook){\r\n//           setVideo(editableBook)\r\n//       }\r\n     \r\n    \r\n//   },[editableBook])\r\n\r\n\r\n  \r\n//   return (\r\n//     <>\r\n//     <div className=\"grid-container\">\r\n//       <div className=\"box\">\r\n//         <div className=\"Pic\">\r\n//            {/* <img src={i8} alt=\"A book\" /> */}\r\n//           <img src = {Image} alt=\"A book\"/>\r\n//         </div>\r\n//         <div className=\"book\">{Name}</div>\r\n//         <div className=\"Author\">Author:{Author}</div>\r\n//         <div className=\"Publisher\">Publication:{Publisher}</div>\r\n//         <div className=\"Availability\"> Avability:{Availability}</div>\r\n//         <div className=\"Ledger\">Ledger:{Ledger}</div>\r\n//         <button\r\n//           className=\"delete\"onClick={()=>deleteBook(id)}>\r\n//           Delete\r\n//         </button>\r\n//         {/* <button className=\"update\" onClick = {()=>editBook(id)}>\r\n//           Update\r\n//         </button> */}\r\n//            <button color=\"primary\" variant=\"contained\" onClick={handleClickOpen}  >Update</button>\r\n//           <Dialog open={open} onClose={handleClose} fullWidth>\r\n//             <DialogTitle>UserScreen</DialogTitle>\r\n//              <DialogContent>\r\n                \r\n//                 <Stack spacing={2} margin={2}>\r\n//                 <TextField variant=\"outlined\" label = \" Update Book Name\" name=\"Name\"  onChange={handleChange} value={video.Name}></TextField>\r\n//                  <TextField variant=\"outlined\" label = \" Update Author Name\" name=\"Author\"  onChange={handleChange}value={video.Author}></TextField>\r\n//                  <TextField variant=\"outlined\" label = \" Update Publisher Name\" name=\"Publisher\" onChange={handleChange}value={video.Publisher}></TextField>\r\n//                   <TextField variant=\"outlined\" label = \" Update Availability\" name=\"Availability\" onChange={handleChange}value={video.Availability}></TextField>\r\n//                   <TextField variant=\"outlined\" label = \" Update Ledger\" name=\"Ledger\" onChange={handleChange}value={video.Ledger}></TextField>\r\n\r\n//                  <Button color=\"primary\" variant=\"contained\" onClick={handleSubmit}>Update</Button>\r\n//                  </Stack>\r\n//              </DialogContent>\r\n//            <DialogActions>\r\n               \r\n//                 <Button color=\"error\" variant=\"contained\" onClick={handleClose}>Close</Button>\r\n//             </DialogActions>\r\n//            </Dialog>\r\n\r\n//       </div>\r\n//       </div>\r\n//     </>\r\n//   );\r\n// }\r\n// export default Book;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAGA;AACA;;AAEA;AACA;;AAGA;AACA;AACA;;AAGA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAGA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}