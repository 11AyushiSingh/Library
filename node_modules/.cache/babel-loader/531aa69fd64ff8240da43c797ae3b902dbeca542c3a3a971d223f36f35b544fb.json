{"ast":null,"code":"function Validation(value) {\n  let error = {};\n  const email_pattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  const password_pattern = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[a-zA-Z0-9]{8,}$/;\n  if (value.name === \"\") {\n    error.name = \"Name should not be empty\";\n  } else {\n    error.email = \"\";\n  }\n  if (value.email === \"\") {\n    error.email = \"email should not be empty\";\n  } else if (!email_pattern.test(value.email)) {\n    error.email = \"Email Didn't match\";\n  } else {\n    error.email = \"\";\n  }\n  if (value.password === \"\") {\n    error.password = \"Password should not be empty\";\n  } else if (!password_pattern.test(value.password)) {\n    error.password = \"Password didn't match\";\n  } else {\n    error.password = \"\";\n  }\n  return error;\n}\n_c = Validation;\nexport default Validation;\nvar _c;\n$RefreshReg$(_c, \"Validation\");","map":{"version":3,"names":["Validation","value","error","email_pattern","password_pattern","name","email","test","password","_c","$RefreshReg$"],"sources":["C:/Users/Ayushi/library1/src/Pages/RegistrationValidation.js"],"sourcesContent":["function Validation(value) {\r\n    let error = {};\r\n    const email_pattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    const password_pattern = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[a-zA-Z0-9]{8,}$/;\r\n   \r\n    if (value.name === \"\") {\r\n        error.name = \"Name should not be empty\";\r\n      } else {\r\n        error.email = \"\";\r\n      }\r\n\r\n    if (value.email === \"\") {\r\n      error.email = \"email should not be empty\";\r\n    } else if (!email_pattern.test(value.email)) {\r\n      error.email = \"Email Didn't match\";\r\n    } else {\r\n      error.email = \"\";\r\n    }\r\n    if (value.password === \"\") {\r\n      error.password = \"Password should not be empty\";\r\n    } else if (!password_pattern.test(value.password)) {\r\n      error.password = \"Password didn't match\";\r\n    } else {\r\n      error.password = \"\";\r\n    }\r\n    return error;\r\n  }\r\n  \r\n  export default Validation;\r\n  "],"mappings":"AAAA,SAASA,UAAUA,CAACC,KAAK,EAAE;EACvB,IAAIC,KAAK,GAAG,CAAC,CAAC;EACd,MAAMC,aAAa,GAAG,4BAA4B;EAClD,MAAMC,gBAAgB,GAAG,iDAAiD;EAE1E,IAAIH,KAAK,CAACI,IAAI,KAAK,EAAE,EAAE;IACnBH,KAAK,CAACG,IAAI,GAAG,0BAA0B;EACzC,CAAC,MAAM;IACLH,KAAK,CAACI,KAAK,GAAG,EAAE;EAClB;EAEF,IAAIL,KAAK,CAACK,KAAK,KAAK,EAAE,EAAE;IACtBJ,KAAK,CAACI,KAAK,GAAG,2BAA2B;EAC3C,CAAC,MAAM,IAAI,CAACH,aAAa,CAACI,IAAI,CAACN,KAAK,CAACK,KAAK,CAAC,EAAE;IAC3CJ,KAAK,CAACI,KAAK,GAAG,oBAAoB;EACpC,CAAC,MAAM;IACLJ,KAAK,CAACI,KAAK,GAAG,EAAE;EAClB;EACA,IAAIL,KAAK,CAACO,QAAQ,KAAK,EAAE,EAAE;IACzBN,KAAK,CAACM,QAAQ,GAAG,8BAA8B;EACjD,CAAC,MAAM,IAAI,CAACJ,gBAAgB,CAACG,IAAI,CAACN,KAAK,CAACO,QAAQ,CAAC,EAAE;IACjDN,KAAK,CAACM,QAAQ,GAAG,uBAAuB;EAC1C,CAAC,MAAM;IACLN,KAAK,CAACM,QAAQ,GAAG,EAAE;EACrB;EACA,OAAON,KAAK;AACd;AAACO,EAAA,GA1BMT,UAAU;AA4BjB,eAAeA,UAAU;AAAC,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}