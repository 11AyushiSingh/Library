{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ayushi\\\\library1\\\\src\\\\Pages\\\\BookList.js\",\n  _s = $RefreshSig$();\nimport Book from \"./Book\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction BookList({\n  deleteBook,\n  editBook\n}) {\n  _s();\n  const [videos, setVideos] = useState([]);\n  useEffect(() => {\n    const params = new URLSearchParams(window.location.search);\n    const authorName = params.get('author');\n    fetch(`http://localhost:8000/book?author=${encodeURIComponent(authorName)}`).then(response => response.json()).then(data => {\n      if (data && data.books) {\n        setvideos(data.books); // Update books state with fetched data\n      } else {\n        set([]); // Set books to an empty array if no data is received\n      }\n    }).catch(error => {\n      console.error('Error fetching books:', error);\n      setBooks([]); // Handle error scenario by setting books to an empty array\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-container\",\n      children: videos.map(video => /*#__PURE__*/_jsxDEV(Book, {\n        id: video.id,\n        Image: video.Image,\n        Name: video.Name,\n        Author: video.Author,\n        Publisher: video.Publisher,\n        Availability: video.Availability,\n        Ledger: video.Ledger,\n        deleteBook: deleteBook,\n        editBook: editBook\n      }, video.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 28\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 10\n    }, this)\n  }, void 0, false);\n}\n_s(BookList, \"39g9r2hk3cJXA16k+db4Z3Rqykw=\");\n_c = BookList;\nexport default BookList;\nvar _c;\n$RefreshReg$(_c, \"BookList\");","map":{"version":3,"names":["Book","useState","useEffect","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","BookList","deleteBook","editBook","_s","videos","setVideos","params","URLSearchParams","window","location","search","authorName","get","fetch","encodeURIComponent","then","response","json","data","books","setvideos","set","catch","error","console","setBooks","children","className","map","video","id","Image","Name","Author","Publisher","Availability","Ledger","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Ayushi/library1/src/Pages/BookList.js"],"sourcesContent":["import Book from \"./Book\";\r\nimport { useState,useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nfunction BookList({deleteBook,editBook}){\r\n    const [videos, setVideos] = useState([]);\r\n    useEffect(() => {\r\n        const params = new URLSearchParams(window.location.search);\r\n        const authorName = params.get('author');\r\n      \r\n        fetch(`http://localhost:8000/book?author=${encodeURIComponent(authorName)}`)\r\n          .then((response) => response.json())\r\n          .then((data) => {\r\n            if (data && data.books) {\r\n              setvideos(data.books); // Update books state with fetched data\r\n            } else {\r\n              set([]); // Set books to an empty array if no data is received\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            console.error('Error fetching books:', error);\r\n            setBooks([]); // Handle error scenario by setting books to an empty array\r\n          });\r\n      }, []);\r\n      \r\n\r\n    return(\r\n        <>\r\n         <div className=\"grid-container\">\r\n        {videos.map(video=><Book \r\n                 key = {video.id}\r\n                 id = {video.id}\r\n                 Image = {video.Image}\r\n                 Name = {video.Name}\r\n                 Author = {video.Author}\r\n                 Publisher = {video.Publisher}\r\n                 Availability = {video.Availability}\r\n                 Ledger = {video.Ledger}\r\n                 deleteBook = {deleteBook}\r\n                 editBook={editBook}\r\n                 >\r\n\r\n                 </Book>)}\r\n                 </div>\r\n        </>\r\n    )\r\n}\r\nexport default BookList;"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,QAAQ;AACzB,SAASC,QAAQ,EAACC,SAAS,QAAQ,OAAO;AAC1C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAC1B,SAASC,QAAQA,CAAC;EAACC,UAAU;EAACC;AAAQ,CAAC,EAAC;EAAAC,EAAA;EACpC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACxCC,SAAS,CAAC,MAAM;IACZ,MAAMY,MAAM,GAAG,IAAIC,eAAe,CAACC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC;IAC1D,MAAMC,UAAU,GAAGL,MAAM,CAACM,GAAG,CAAC,QAAQ,CAAC;IAEvCC,KAAK,CAAE,qCAAoCC,kBAAkB,CAACH,UAAU,CAAE,EAAC,CAAC,CACzEI,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MACd,IAAIA,IAAI,IAAIA,IAAI,CAACC,KAAK,EAAE;QACtBC,SAAS,CAACF,IAAI,CAACC,KAAK,CAAC,CAAC,CAAC;MACzB,CAAC,MAAM;QACLE,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;MACX;IACF,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7CE,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;IAChB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAGR,oBACI5B,OAAA,CAAAE,SAAA;IAAA2B,QAAA,eACC7B,OAAA;MAAK8B,SAAS,EAAC,gBAAgB;MAAAD,QAAA,EAC/BtB,MAAM,CAACwB,GAAG,CAACC,KAAK,iBAAEhC,OAAA,CAACL,IAAI;QAEfsC,EAAE,EAAID,KAAK,CAACC,EAAG;QACfC,KAAK,EAAIF,KAAK,CAACE,KAAM;QACrBC,IAAI,EAAIH,KAAK,CAACG,IAAK;QACnBC,MAAM,EAAIJ,KAAK,CAACI,MAAO;QACvBC,SAAS,EAAIL,KAAK,CAACK,SAAU;QAC7BC,YAAY,EAAIN,KAAK,CAACM,YAAa;QACnCC,MAAM,EAAIP,KAAK,CAACO,MAAO;QACvBnC,UAAU,EAAIA,UAAW;QACzBC,QAAQ,EAAEA;MAAS,GATZ2B,KAAK,CAACC,EAAE;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAYT,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC,gBACb,CAAC;AAEX;AAACrC,EAAA,CA1CQH,QAAQ;AAAAyC,EAAA,GAARzC,QAAQ;AA2CjB,eAAeA,QAAQ;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}