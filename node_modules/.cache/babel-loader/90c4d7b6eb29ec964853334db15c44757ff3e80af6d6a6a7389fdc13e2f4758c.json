{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ayushi\\\\library1\\\\src\\\\Pages\\\\Book.js\",\n  _s = $RefreshSig$();\n// // //import i8 from \"../image/i8.PNG\";\n// // //import { useState } from \"react\";\n// // import \"./Book.css\";\n// // //import { Button, Dialog, DialogTitle, DialogContent, Stack, DialogActions,TextField } from '@mui/material';\n// // function Book({id,Name, Author, Publisher,Image, Availability,Ledger,deleteBook,editBook}) {\n// //   // const [open, setOpen] = useState(false);\n\n// //   // const handleClickOpen = () => {\n// //   //   setOpen(true);\n// //   //   editBook(id);\n// //   // };\n\n// //   // const handleClose = () => {\n// //   //   setOpen(false);\n// //   // };\n\n// //   return (\n// //     <>\n// //     <div className=\"grid-container\">\n// //       <div className=\"box\">\n// //         <div className=\"Pic\">\n// //            {/* <img src={i8} alt=\"A book\" /> */}\n// //           <img src = {Image} alt=\"A book\"/>\n// //         </div>\n// //         <div className=\"book\">{Name}</div>\n// //         <div className=\"Author\">Author:{Author}</div>\n// //         <div className=\"Publisher\">Publication:{Publisher}</div>\n// //         <div className=\"Availability\"> Avability:{Availability}</div>\n// //         <div className=\"Ledger\">Ledger:{Ledger}</div>\n// //         <button\n// //           className=\"delete\"onClick={()=>deleteBook(id)}>\n// //           Delete\n// //         </button>\n// //         <button className=\"update\" onClick = {()=>editBook(id)}>\n// //           Update\n// //         </button>\n// //            {/* <button color=\"primary\" variant=\"contained\" onClick={handleClickOpen}  >Update</button>\n// //           <Dialog open={open} onClose={handleClose} fullWidth>\n// //             <DialogTitle>UserScreen</DialogTitle>\n// //             <DialogContent>\n\n// //                 <Stack spacing={2} margin={2}>\n// //                  <TextField variant=\"outlined\" label = \" Update Book Name\" ></TextField>\n// //                  <TextField variant=\"outlined\" label = \" Update Author Name\"></TextField>\n// //                  <TextField variant=\"outlined\" label = \" Update Publisher Name\"></TextField>\n// //                  <TextField variant=\"outlined\" label = \" Update Availability\"></TextField>\n// //                  <TextField variant=\"outlined\" label = \" Update Ledger\"></TextField>\n\n// //                  <Button color=\"primary\" variant=\"contained\" >Update</Button>\n// //                 </Stack>\n// //             </DialogContent>\n// //             <DialogActions>\n\n// //                 <Button color=\"error\" variant=\"contained\" onClick={handleClose}>Close</Button>\n// //             </DialogActions>\n// //           </Dialog> */}\n\n// //       </div>\n// //       </div>\n// //     </>\n// //   );\n// // }\n// // export default Book;\n\n// import { useState, useEffect } from \"react\";\n// import \"./Book.css\";\n// import {\n//   Button,\n//   Dialog,\n//   DialogTitle,\n//   DialogContent,\n//   Stack,\n//   DialogActions,\n//   TextField,\n// } from \"@mui/material\";\n// function Book({\n//   id,\n//   Name,\n//   Author,\n//   Publisher,\n//   Image,\n//   Availability,\n//   Ledger,\n//   deleteBook,\n//   editBook,\n// }) {\n//   const initialState = {\n//     id: \"\",\n//     Image: \"\",\n//     Name: \"\",\n//     Author: \"\",\n//     Publisher: \"\",\n//     Availability: \"\",\n//     Ledger: \"\",\n//   };\n//   const [open, setOpen] = useState(false);\n//   const [video, setVideo] = useState(initialState);\n//   const [editableBook, setEditableBook] = useState(null);\n//   const [videos, setVideos] = useState([]);\n//   const handleClickOpen = () => {\n//     setOpen(true);\n//     editBook(id);\n//   };\n//   const handleClose = () => {\n//     setOpen(false);\n//   };\n//   function editBook(id) {\n//     setEditableBook(videos.find((video) => video.id === id));\n//     console.log(id);\n//     console.log(video);\n//   }\n//   function updateBook(updatedBook) {\n//     const index = videos.findIndex((v) => v.id === updatedBook.id);\n//     const newBooks = [...videos];\n//     newBooks.splice(index, 1, updatedBook);\n//     fetch(`http://localhost:8000/book/${updatedBook.id}`, {\n//       method: \"PUT\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//       },\n//       body: JSON.stringify(updatedBook),\n//     })\n//       .then((result) => {\n//         if (result.ok) {\n//           return result.json();\n//         }\n//         throw new Error(\"Network response was not ok.\");\n//       })\n//       .then((response) => {\n//         console.log(response);\n//         setVideos(newBooks);\n//       })\n//       .catch((error) => {\n//         console.error(\"There was a problem updating the book:\", error);\n//       });\n//   }\n//   function handleSubmit(e) {\n//     e.preventDefault();\n//     if (editableBook) {\n//       updateBook(video);\n//     }\n//     setVideo(initialState);\n//   }\n//   function handleChange(e) {\n//     setVideo({ ...video, [e.target.name]: e.target.value });\n//   }\n//   useEffect(() => {\n//     if (editableBook) {\n//       setVideo(editableBook);\n//     }\n//   }, [editableBook]);\n//   return (\n//     <>\n//       <div className=\"grid-container\">\n//         <div className=\"box\">\n//           <div className=\"Pic\">\n//             <img src={Image} alt=\"A book\" />\n//           </div>\n//           <div className=\"book\">{Name}</div>\n//           <div className=\"Author\">Author: {Author}</div>\n//           <div className=\"Publisher\">Publication: {Publisher}</div>\n//           <div className=\"Availability\">Avability: {Availability}</div>\n//           <div className=\"Ledger\">Ledger: {Ledger}</div>\n//           <button className=\"delete\" onClick={() => deleteBook(id)}>\n//             Delete\n//           </button>\n//           <button\n//             color=\"primary\"\n//             variant=\"contained\"\n//             onClick={handleClickOpen}\n//           >\n//             Update\n//           </button>\n//           <Dialog open={open} onClose={handleClose} fullWidth>\n//             <DialogTitle>UserScreen</DialogTitle>\n//             <DialogContent>\n//               <Stack spacing={2} margin={2}>\n//                 <TextField\n//                   variant=\"outlined\"\n//                   label=\"Update Book Name\"\n//                   name=\"Name\"\n//                   onChange={handleChange}\n//                   value={video.Name}\n//                 ></TextField>\n//                 <TextField\n//                   variant=\"outlined\"\n//                   label=\"Update Author Name\"\n//                   name=\"Author\"\n//                   onChange={handleChange}\n//                   value={video.Author}\n//                 ></TextField>\n//                 <TextField\n//                   variant=\"outlined\"\n//                   label=\"Update Publisher Name\"\n//                   name=\"Publisher\"\n//                   onChange={handleChange}\n//                   value={video.Publisher}\n//                 ></TextField>\n//                 <TextField\n//                   variant=\"outlined\"\n//                   label=\"Update Availability\"\n//                   name=\"Availability\"\n//                   onChange={handleChange}\n//                   value={video.Availability}\n//                 ></TextField>\n//                 <TextField\n//                   variant=\"outlined\"\n//                   label=\"Update Ledger\"\n//                   name=\"Ledger\"\n//                   onChange={handleChange}\n//                   value={video.Ledger}\n//                 ></TextField>\n//                 <Button color=\"primary\" variant=\"contained\" onClick={handleSubmit}>\n//                   Update\n//                 </Button>\n//               </Stack>\n//             </DialogContent>\n//             <DialogActions>\n//               <Button color=\"error\" variant=\"contained\" onClick={handleClose}>\n//                 Close\n//               </Button>\n//             </DialogActions>\n//           </Dialog>\n//         </div>\n//       </div>\n//     </>\n//   );\n// }\n// export default Book;\n\nimport { useState, useEffect } from \"react\";\nimport \"./Book.css\";\nimport { Button, Dialog, DialogTitle, DialogContent, Stack, DialogActions, TextField } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Book({\n  id,\n  Name,\n  Author,\n  Publisher,\n  Image,\n  Availability,\n  Ledger,\n  deleteBook,\n  editBook\n}) {\n  _s();\n  const initialState = {\n    id: \"\",\n    Image: \"\",\n    Name: \"\",\n    Author: \"\",\n    Publisher: \"\",\n    Availability: \"\",\n    Ledger: \"\"\n  };\n  const [open, setOpen] = useState(false);\n  const [video, setVideo] = useState(initialState);\n  const [editableBook, setEditableBook] = useState(null);\n  const [videos, setVideos] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [bookData, setBookData] = useState(null);\n  const handleClickOpen = () => {\n    setOpen(true);\n    editBook(id);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n  function editBook(id) {\n    setEditableBook(videos.find(video => video.id === id));\n    console.log(id);\n    console.log(video);\n  }\n  function updateBook(updatedBook) {\n    const index = videos.findIndex(v => v.id === updatedBook.id);\n    const newBooks = [...videos];\n    newBooks.splice(index, 1, updatedBook);\n    fetch(`http://localhost:8000/book/${updatedBook.id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(updatedBook)\n    }).then(result => {\n      if (result.ok) {\n        return result.json();\n      }\n      throw new Error(\"Network response was not ok.\");\n    }).then(response => {\n      console.log(response);\n      setVideos(newBooks);\n    }).catch(error => {\n      console.error(\"There was a problem updating the book:\", error);\n    });\n  }\n  function handleSubmit(e) {\n    e.preventDefault();\n    if (editableBook) {\n      updateBook(video);\n    }\n    setVideo(initialState);\n  }\n  function handleChange(e) {\n    setVideo({\n      ...video,\n      [e.target.name]: e.target.value\n    });\n  }\n  useEffect(() => {\n    fetch(`http://localhost:8000/book/${id}`).then(response => {\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n      return response.json();\n    }).then(data => {\n      setBookData(data);\n      setLoading(false);\n    }).catch(error => {\n      setError(error);\n      setLoading(false);\n    });\n  }, [id]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"box\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Pic\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: bookData.Image,\n            alt: \"A book\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"book\",\n          children: bookData.Name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Author\",\n          children: [\"Author: \", bookData.Author]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Publisher\",\n          children: [\"Publication: \", bookData.Publisher]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Availability\",\n          children: [\"Availability: \", bookData.Availability]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Ledger\",\n          children: [\"Ledger: \", bookData.Ledger]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"delete\",\n          onClick: () => deleteBook(id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          color: \"primary\",\n          variant: \"contained\",\n          onClick: handleClickOpen,\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n          open: open,\n          onClose: handleClose,\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(Book, \"gJzCGIS7RNXUChxJ5RZVKsq9FFs=\");\n_c = Book;\nexport default Book;\nvar _c;\n$RefreshReg$(_c, \"Book\");","map":{"version":3,"names":["useState","useEffect","Button","Dialog","DialogTitle","DialogContent","Stack","DialogActions","TextField","jsxDEV","_jsxDEV","Fragment","_Fragment","Book","id","Name","Author","Publisher","Image","Availability","Ledger","deleteBook","editBook","_s","initialState","open","setOpen","video","setVideo","editableBook","setEditableBook","videos","setVideos","loading","setLoading","error","setError","bookData","setBookData","handleClickOpen","handleClose","find","console","log","updateBook","updatedBook","index","findIndex","v","newBooks","splice","fetch","method","headers","body","JSON","stringify","then","result","ok","json","Error","response","catch","handleSubmit","e","preventDefault","handleChange","target","name","value","data","children","fileName","_jsxFileName","lineNumber","columnNumber","message","className","src","alt","onClick","color","variant","onClose","fullWidth","_c","$RefreshReg$"],"sources":["C:/Users/Ayushi/library1/src/Pages/Book.js"],"sourcesContent":["// // //import i8 from \"../image/i8.PNG\";\r\n// // //import { useState } from \"react\";\r\n// // import \"./Book.css\";\r\n// // //import { Button, Dialog, DialogTitle, DialogContent, Stack, DialogActions,TextField } from '@mui/material';\r\n// // function Book({id,Name, Author, Publisher,Image, Availability,Ledger,deleteBook,editBook}) {\r\n// //   // const [open, setOpen] = useState(false);\r\n\r\n// //   // const handleClickOpen = () => {\r\n// //   //   setOpen(true);\r\n// //   //   editBook(id);\r\n// //   // };\r\n\r\n// //   // const handleClose = () => {\r\n// //   //   setOpen(false);\r\n// //   // };\r\n\r\n\r\n\r\n  \r\n// //   return (\r\n// //     <>\r\n// //     <div className=\"grid-container\">\r\n// //       <div className=\"box\">\r\n// //         <div className=\"Pic\">\r\n// //            {/* <img src={i8} alt=\"A book\" /> */}\r\n// //           <img src = {Image} alt=\"A book\"/>\r\n// //         </div>\r\n// //         <div className=\"book\">{Name}</div>\r\n// //         <div className=\"Author\">Author:{Author}</div>\r\n// //         <div className=\"Publisher\">Publication:{Publisher}</div>\r\n// //         <div className=\"Availability\"> Avability:{Availability}</div>\r\n// //         <div className=\"Ledger\">Ledger:{Ledger}</div>\r\n// //         <button\r\n// //           className=\"delete\"onClick={()=>deleteBook(id)}>\r\n// //           Delete\r\n// //         </button>\r\n// //         <button className=\"update\" onClick = {()=>editBook(id)}>\r\n// //           Update\r\n// //         </button>\r\n// //            {/* <button color=\"primary\" variant=\"contained\" onClick={handleClickOpen}  >Update</button>\r\n// //           <Dialog open={open} onClose={handleClose} fullWidth>\r\n// //             <DialogTitle>UserScreen</DialogTitle>\r\n// //             <DialogContent>\r\n                \r\n// //                 <Stack spacing={2} margin={2}>\r\n// //                  <TextField variant=\"outlined\" label = \" Update Book Name\" ></TextField>\r\n// //                  <TextField variant=\"outlined\" label = \" Update Author Name\"></TextField>\r\n// //                  <TextField variant=\"outlined\" label = \" Update Publisher Name\"></TextField>\r\n// //                  <TextField variant=\"outlined\" label = \" Update Availability\"></TextField>\r\n// //                  <TextField variant=\"outlined\" label = \" Update Ledger\"></TextField>\r\n\r\n// //                  <Button color=\"primary\" variant=\"contained\" >Update</Button>\r\n// //                 </Stack>\r\n// //             </DialogContent>\r\n// //             <DialogActions>\r\n               \r\n// //                 <Button color=\"error\" variant=\"contained\" onClick={handleClose}>Close</Button>\r\n// //             </DialogActions>\r\n// //           </Dialog> */}\r\n\r\n// //       </div>\r\n// //       </div>\r\n// //     </>\r\n// //   );\r\n// // }\r\n// // export default Book;\r\n\r\n// import { useState, useEffect } from \"react\";\r\n// import \"./Book.css\";\r\n// import {\r\n//   Button,\r\n//   Dialog,\r\n//   DialogTitle,\r\n//   DialogContent,\r\n//   Stack,\r\n//   DialogActions,\r\n//   TextField,\r\n// } from \"@mui/material\";\r\n// function Book({\r\n//   id,\r\n//   Name,\r\n//   Author,\r\n//   Publisher,\r\n//   Image,\r\n//   Availability,\r\n//   Ledger,\r\n//   deleteBook,\r\n//   editBook,\r\n// }) {\r\n//   const initialState = {\r\n//     id: \"\",\r\n//     Image: \"\",\r\n//     Name: \"\",\r\n//     Author: \"\",\r\n//     Publisher: \"\",\r\n//     Availability: \"\",\r\n//     Ledger: \"\",\r\n//   };\r\n//   const [open, setOpen] = useState(false);\r\n//   const [video, setVideo] = useState(initialState);\r\n//   const [editableBook, setEditableBook] = useState(null);\r\n//   const [videos, setVideos] = useState([]);\r\n//   const handleClickOpen = () => {\r\n//     setOpen(true);\r\n//     editBook(id);\r\n//   };\r\n//   const handleClose = () => {\r\n//     setOpen(false);\r\n//   };\r\n//   function editBook(id) {\r\n//     setEditableBook(videos.find((video) => video.id === id));\r\n//     console.log(id);\r\n//     console.log(video);\r\n//   }\r\n//   function updateBook(updatedBook) {\r\n//     const index = videos.findIndex((v) => v.id === updatedBook.id);\r\n//     const newBooks = [...videos];\r\n//     newBooks.splice(index, 1, updatedBook);\r\n//     fetch(`http://localhost:8000/book/${updatedBook.id}`, {\r\n//       method: \"PUT\",\r\n//       headers: {\r\n//         \"Content-Type\": \"application/json\",\r\n//       },\r\n//       body: JSON.stringify(updatedBook),\r\n//     })\r\n//       .then((result) => {\r\n//         if (result.ok) {\r\n//           return result.json();\r\n//         }\r\n//         throw new Error(\"Network response was not ok.\");\r\n//       })\r\n//       .then((response) => {\r\n//         console.log(response);\r\n//         setVideos(newBooks);\r\n//       })\r\n//       .catch((error) => {\r\n//         console.error(\"There was a problem updating the book:\", error);\r\n//       });\r\n//   }\r\n//   function handleSubmit(e) {\r\n//     e.preventDefault();\r\n//     if (editableBook) {\r\n//       updateBook(video);\r\n//     }\r\n//     setVideo(initialState);\r\n//   }\r\n//   function handleChange(e) {\r\n//     setVideo({ ...video, [e.target.name]: e.target.value });\r\n//   }\r\n//   useEffect(() => {\r\n//     if (editableBook) {\r\n//       setVideo(editableBook);\r\n//     }\r\n//   }, [editableBook]);\r\n//   return (\r\n//     <>\r\n//       <div className=\"grid-container\">\r\n//         <div className=\"box\">\r\n//           <div className=\"Pic\">\r\n//             <img src={Image} alt=\"A book\" />\r\n//           </div>\r\n//           <div className=\"book\">{Name}</div>\r\n//           <div className=\"Author\">Author: {Author}</div>\r\n//           <div className=\"Publisher\">Publication: {Publisher}</div>\r\n//           <div className=\"Availability\">Avability: {Availability}</div>\r\n//           <div className=\"Ledger\">Ledger: {Ledger}</div>\r\n//           <button className=\"delete\" onClick={() => deleteBook(id)}>\r\n//             Delete\r\n//           </button>\r\n//           <button\r\n//             color=\"primary\"\r\n//             variant=\"contained\"\r\n//             onClick={handleClickOpen}\r\n//           >\r\n//             Update\r\n//           </button>\r\n//           <Dialog open={open} onClose={handleClose} fullWidth>\r\n//             <DialogTitle>UserScreen</DialogTitle>\r\n//             <DialogContent>\r\n//               <Stack spacing={2} margin={2}>\r\n//                 <TextField\r\n//                   variant=\"outlined\"\r\n//                   label=\"Update Book Name\"\r\n//                   name=\"Name\"\r\n//                   onChange={handleChange}\r\n//                   value={video.Name}\r\n//                 ></TextField>\r\n//                 <TextField\r\n//                   variant=\"outlined\"\r\n//                   label=\"Update Author Name\"\r\n//                   name=\"Author\"\r\n//                   onChange={handleChange}\r\n//                   value={video.Author}\r\n//                 ></TextField>\r\n//                 <TextField\r\n//                   variant=\"outlined\"\r\n//                   label=\"Update Publisher Name\"\r\n//                   name=\"Publisher\"\r\n//                   onChange={handleChange}\r\n//                   value={video.Publisher}\r\n//                 ></TextField>\r\n//                 <TextField\r\n//                   variant=\"outlined\"\r\n//                   label=\"Update Availability\"\r\n//                   name=\"Availability\"\r\n//                   onChange={handleChange}\r\n//                   value={video.Availability}\r\n//                 ></TextField>\r\n//                 <TextField\r\n//                   variant=\"outlined\"\r\n//                   label=\"Update Ledger\"\r\n//                   name=\"Ledger\"\r\n//                   onChange={handleChange}\r\n//                   value={video.Ledger}\r\n//                 ></TextField>\r\n//                 <Button color=\"primary\" variant=\"contained\" onClick={handleSubmit}>\r\n//                   Update\r\n//                 </Button>\r\n//               </Stack>\r\n//             </DialogContent>\r\n//             <DialogActions>\r\n//               <Button color=\"error\" variant=\"contained\" onClick={handleClose}>\r\n//                 Close\r\n//               </Button>\r\n//             </DialogActions>\r\n//           </Dialog>\r\n//         </div>\r\n//       </div>\r\n//     </>\r\n//   );\r\n// }\r\n// export default Book;\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport \"./Book.css\";\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  Stack,\r\n  DialogActions,\r\n  TextField,\r\n} from \"@mui/material\";\r\n\r\nfunction Book({\r\n  id,\r\n  Name,\r\n  Author,\r\n  Publisher,\r\n  Image,\r\n  Availability,\r\n  Ledger,\r\n  deleteBook,\r\n  editBook,\r\n}) {\r\n  const initialState = {\r\n    id: \"\",\r\n    Image: \"\",\r\n    Name: \"\",\r\n    Author: \"\",\r\n    Publisher: \"\",\r\n    Availability: \"\",\r\n    Ledger: \"\",\r\n  };\r\n  \r\n  const [open, setOpen] = useState(false);\r\n  const [video, setVideo] = useState(initialState);\r\n  const [editableBook, setEditableBook] = useState(null);\r\n  const [videos, setVideos] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [bookData, setBookData] = useState(null);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n    editBook(id);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  function editBook(id) {\r\n    setEditableBook(videos.find((video) => video.id === id));\r\n    console.log(id);\r\n    console.log(video);\r\n  }\r\n\r\n  function updateBook(updatedBook) {\r\n    const index = videos.findIndex((v) => v.id === updatedBook.id);\r\n    const newBooks = [...videos];\r\n    newBooks.splice(index, 1, updatedBook);\r\n    fetch(`http://localhost:8000/book/${updatedBook.id}`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(updatedBook),\r\n    })\r\n      .then((result) => {\r\n        if (result.ok) {\r\n          return result.json();\r\n        }\r\n        throw new Error(\"Network response was not ok.\");\r\n      })\r\n      .then((response) => {\r\n        console.log(response);\r\n        setVideos(newBooks);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"There was a problem updating the book:\", error);\r\n      });\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    if (editableBook) {\r\n      updateBook(video);\r\n    }\r\n    setVideo(initialState);\r\n  }\r\n\r\n  function handleChange(e) {\r\n    setVideo({ ...video, [e.target.name]: e.target.value });\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetch(`http://localhost:8000/book/${id}`)\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(\"Network response was not ok\");\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        setBookData(data);\r\n        setLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        setError(error);\r\n        setLoading(false);\r\n      });\r\n  }, [id]);\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div>Error: {error.message}</div>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"grid-container\">\r\n        <div className=\"box\">\r\n          <div className=\"Pic\">\r\n            <img src={bookData.Image} alt=\"A book\" />\r\n          </div>\r\n          <div className=\"book\">{bookData.Name}</div>\r\n          <div className=\"Author\">Author: {bookData.Author}</div>\r\n          <div className=\"Publisher\">Publication: {bookData.Publisher}</div>\r\n          <div className=\"Availability\">Availability: {bookData.Availability}</div>\r\n          <div className=\"Ledger\">Ledger: {bookData.Ledger}</div>\r\n          <button className=\"delete\" onClick={() => deleteBook(id)}>\r\n            Delete\r\n          </button>\r\n          <button color=\"primary\" variant=\"contained\" onClick={handleClickOpen}>\r\n            Update\r\n          </button>\r\n          <Dialog open={open} onClose={handleClose} fullWidth>\r\n            {/* Dialog Content */}\r\n          </Dialog>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Book;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAO,YAAY;AACnB,SACEC,MAAM,EACNC,MAAM,EACNC,WAAW,EACXC,aAAa,EACbC,KAAK,EACLC,aAAa,EACbC,SAAS,QACJ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEvB,SAASC,IAAIA,CAAC;EACZC,EAAE;EACFC,IAAI;EACJC,MAAM;EACNC,SAAS;EACTC,KAAK;EACLC,YAAY;EACZC,MAAM;EACNC,UAAU;EACVC;AACF,CAAC,EAAE;EAAAC,EAAA;EACD,MAAMC,YAAY,GAAG;IACnBV,EAAE,EAAE,EAAE;IACNI,KAAK,EAAE,EAAE;IACTH,IAAI,EAAE,EAAE;IACRC,MAAM,EAAE,EAAE;IACVC,SAAS,EAAE,EAAE;IACbE,YAAY,EAAE,EAAE;IAChBC,MAAM,EAAE;EACV,CAAC;EAED,MAAM,CAACK,IAAI,EAAEC,OAAO,CAAC,GAAG1B,QAAQ,CAAC,KAAK,CAAC;EACvC,MAAM,CAAC2B,KAAK,EAAEC,QAAQ,CAAC,GAAG5B,QAAQ,CAACwB,YAAY,CAAC;EAChD,MAAM,CAACK,YAAY,EAAEC,eAAe,CAAC,GAAG9B,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAAC+B,MAAM,EAAEC,SAAS,CAAC,GAAGhC,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACiC,OAAO,EAAEC,UAAU,CAAC,GAAGlC,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACmC,KAAK,EAAEC,QAAQ,CAAC,GAAGpC,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACqC,QAAQ,EAAEC,WAAW,CAAC,GAAGtC,QAAQ,CAAC,IAAI,CAAC;EAE9C,MAAMuC,eAAe,GAAGA,CAAA,KAAM;IAC5Bb,OAAO,CAAC,IAAI,CAAC;IACbJ,QAAQ,CAACR,EAAE,CAAC;EACd,CAAC;EAED,MAAM0B,WAAW,GAAGA,CAAA,KAAM;IACxBd,OAAO,CAAC,KAAK,CAAC;EAChB,CAAC;EAED,SAASJ,QAAQA,CAACR,EAAE,EAAE;IACpBgB,eAAe,CAACC,MAAM,CAACU,IAAI,CAAEd,KAAK,IAAKA,KAAK,CAACb,EAAE,KAAKA,EAAE,CAAC,CAAC;IACxD4B,OAAO,CAACC,GAAG,CAAC7B,EAAE,CAAC;IACf4B,OAAO,CAACC,GAAG,CAAChB,KAAK,CAAC;EACpB;EAEA,SAASiB,UAAUA,CAACC,WAAW,EAAE;IAC/B,MAAMC,KAAK,GAAGf,MAAM,CAACgB,SAAS,CAAEC,CAAC,IAAKA,CAAC,CAAClC,EAAE,KAAK+B,WAAW,CAAC/B,EAAE,CAAC;IAC9D,MAAMmC,QAAQ,GAAG,CAAC,GAAGlB,MAAM,CAAC;IAC5BkB,QAAQ,CAACC,MAAM,CAACJ,KAAK,EAAE,CAAC,EAAED,WAAW,CAAC;IACtCM,KAAK,CAAE,8BAA6BN,WAAW,CAAC/B,EAAG,EAAC,EAAE;MACpDsC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACX,WAAW;IAClC,CAAC,CAAC,CACCY,IAAI,CAAEC,MAAM,IAAK;MAChB,IAAIA,MAAM,CAACC,EAAE,EAAE;QACb,OAAOD,MAAM,CAACE,IAAI,CAAC,CAAC;MACtB;MACA,MAAM,IAAIC,KAAK,CAAC,8BAA8B,CAAC;IACjD,CAAC,CAAC,CACDJ,IAAI,CAAEK,QAAQ,IAAK;MAClBpB,OAAO,CAACC,GAAG,CAACmB,QAAQ,CAAC;MACrB9B,SAAS,CAACiB,QAAQ,CAAC;IACrB,CAAC,CAAC,CACDc,KAAK,CAAE5B,KAAK,IAAK;MAChBO,OAAO,CAACP,KAAK,CAAC,wCAAwC,EAAEA,KAAK,CAAC;IAChE,CAAC,CAAC;EACN;EAEA,SAAS6B,YAAYA,CAACC,CAAC,EAAE;IACvBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAIrC,YAAY,EAAE;MAChBe,UAAU,CAACjB,KAAK,CAAC;IACnB;IACAC,QAAQ,CAACJ,YAAY,CAAC;EACxB;EAEA,SAAS2C,YAAYA,CAACF,CAAC,EAAE;IACvBrC,QAAQ,CAAC;MAAE,GAAGD,KAAK;MAAE,CAACsC,CAAC,CAACG,MAAM,CAACC,IAAI,GAAGJ,CAAC,CAACG,MAAM,CAACE;IAAM,CAAC,CAAC;EACzD;EAEArE,SAAS,CAAC,MAAM;IACdkD,KAAK,CAAE,8BAA6BrC,EAAG,EAAC,CAAC,CACtC2C,IAAI,CAAEK,QAAQ,IAAK;MAClB,IAAI,CAACA,QAAQ,CAACH,EAAE,EAAE;QAChB,MAAM,IAAIE,KAAK,CAAC,6BAA6B,CAAC;MAChD;MACA,OAAOC,QAAQ,CAACF,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,CACDH,IAAI,CAAEc,IAAI,IAAK;MACdjC,WAAW,CAACiC,IAAI,CAAC;MACjBrC,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC,CACD6B,KAAK,CAAE5B,KAAK,IAAK;MAChBC,QAAQ,CAACD,KAAK,CAAC;MACfD,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC;EACN,CAAC,EAAE,CAACpB,EAAE,CAAC,CAAC;EAER,IAAImB,OAAO,EAAE;IACX,oBAAOvB,OAAA;MAAA8D,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9B;EAEA,IAAIzC,KAAK,EAAE;IACT,oBAAOzB,OAAA;MAAA8D,QAAA,GAAK,SAAO,EAACrC,KAAK,CAAC0C,OAAO;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAC1C;EAEA,oBACElE,OAAA,CAAAE,SAAA;IAAA4D,QAAA,eACE9D,OAAA;MAAKoE,SAAS,EAAC,gBAAgB;MAAAN,QAAA,eAC7B9D,OAAA;QAAKoE,SAAS,EAAC,KAAK;QAAAN,QAAA,gBAClB9D,OAAA;UAAKoE,SAAS,EAAC,KAAK;UAAAN,QAAA,eAClB9D,OAAA;YAAKqE,GAAG,EAAE1C,QAAQ,CAACnB,KAAM;YAAC8D,GAAG,EAAC;UAAQ;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtC,CAAC,eACNlE,OAAA;UAAKoE,SAAS,EAAC,MAAM;UAAAN,QAAA,EAAEnC,QAAQ,CAACtB;QAAI;UAAA0D,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAC3ClE,OAAA;UAAKoE,SAAS,EAAC,QAAQ;UAAAN,QAAA,GAAC,UAAQ,EAACnC,QAAQ,CAACrB,MAAM;QAAA;UAAAyD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACvDlE,OAAA;UAAKoE,SAAS,EAAC,WAAW;UAAAN,QAAA,GAAC,eAAa,EAACnC,QAAQ,CAACpB,SAAS;QAAA;UAAAwD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAClElE,OAAA;UAAKoE,SAAS,EAAC,cAAc;UAAAN,QAAA,GAAC,gBAAc,EAACnC,QAAQ,CAAClB,YAAY;QAAA;UAAAsD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACzElE,OAAA;UAAKoE,SAAS,EAAC,QAAQ;UAAAN,QAAA,GAAC,UAAQ,EAACnC,QAAQ,CAACjB,MAAM;QAAA;UAAAqD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACvDlE,OAAA;UAAQoE,SAAS,EAAC,QAAQ;UAACG,OAAO,EAAEA,CAAA,KAAM5D,UAAU,CAACP,EAAE,CAAE;UAAA0D,QAAA,EAAC;QAE1D;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTlE,OAAA;UAAQwE,KAAK,EAAC,SAAS;UAACC,OAAO,EAAC,WAAW;UAACF,OAAO,EAAE1C,eAAgB;UAAAiC,QAAA,EAAC;QAEtE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTlE,OAAA,CAACP,MAAM;UAACsB,IAAI,EAAEA,IAAK;UAAC2D,OAAO,EAAE5C,WAAY;UAAC6C,SAAS;QAAA;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAE3C,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC,gBACN,CAAC;AAEP;AAACrD,EAAA,CArIQV,IAAI;AAAAyE,EAAA,GAAJzE,IAAI;AAuIb,eAAeA,IAAI;AAAC,IAAAyE,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}